/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if (l1 == null){
            return l2;
        }
        if (l2 == null){
            return l1;
        }
        
        ListNode inicio, aux;
        
        if (l1.val < l2.val){
            inicio = aux = new ListNode (l1.val);
            l1 = l1.next;
           // if (l2.next == null){
             //   aux.next = l2;
              //  l2 = l2.next;
           // }
        } else {
            inicio = aux = new ListNode (l2.val);
            l2 = l2.next;
           // if (l1.next == null){
               // aux.next = l1;
               // l1 = l1.next;
           // }
        }
        
        while ((l1 != null) && (l2 != null) ){
            if (l1.val < l2.val){
                aux.next = new ListNode (l1.val);
                l1 = l1.next;
            } else {
                aux.next = new ListNode(l2.val);
                l2 = l2.next;
             }
            aux = aux.next;
        }
        
        while (l1 != null){
            aux.next = new ListNode (l1.val);
            l1 = l1.next;
            aux = aux.next;
        }
        
        while (l2 != null){
            aux.next = new ListNode (l2.val);
            l2 = l2.next;
            aux = aux.next;
        }
        return inicio;
    }
}
